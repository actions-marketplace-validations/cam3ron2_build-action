name: 'Predefined Build/Push'
description: 'Builds a docker image and pushes a registry'
author: '@cam3ron2'
branding:
  icon: 'terminal'
  color: 'blue'

inputs:
  file:
    description: 'Path to the Dockerfile'
    default: 'Dockerfile'
    required: false
  context:
    description: "Build's context is the set of files located in the specified PATH or URL"
    default: '.'
    required: false
  build-args:
    description: 'Arguments to pass to the Dockerfile'
    default: ''
    required: false
  registry:
    description: 'Registry that houses the repository'
    default: ''
    required: false
  repository:
    description: 'Repository to push to'
    default: ''
    required: true
  push:
    description: 'Push the image to the registry'
    default: 'true'
    required: false
  username:
    description: 'Username for the registry'
    default: ''
    required: true
  password:
    description: 'Password for the registry'
    default: ''
    required: true
  publish-cache:
    description: 'If true, create an artifact'
    default: 'true'
    required: false
outputs:
  imageid:
    description: 'Image ID'
    value: '{{ steps.push.imageid }}'
  digest:
    description: 'Image digest'
    value: '{{ steps.push.digest }}'
  metadata:
    description: 'Build result metadata'
    value: '{{ steps.push.metadata }}'

runs:
  using: 'composite'
  steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ inputs.registry }}/${{ inputs.repository }}
        tags: |
          type=schedule
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=sha
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Enable Docker Cache
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        # Key is named differently to avoid collision
        key: ${{ runner.os }}-multi-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-multi-buildx
    - name: Login to Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.username }}
        password: ${{ inputs.password }}
    - name: Build/Push
      id: push
      uses: docker/build-push-action@v3
      with:
        context: ${{ inputs.context }}
        file: ${{ inputs.file }}
        build-args: ${{ inputs.build-args }}
        platforms: linux/amd64,linux/arm64
        push: ${{ inputs.push == 'true' && github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
    - name: Move cache
      shell: bash
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache
